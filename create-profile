#! /bin/bash

set -e

# Creates a new user for git usage
GIT_PROFILE_DIR="$HOME/.gitprofiles"
username=
email=
name=
# zshrc or bashrc or the likes
shell_config=

get_user_shell_profile_config() {
  if [ $SHELL -eq "/usr/bin/zsh" ];then 
    shell_config="$HOME/.zshrc"
  elif [ $SHELL -eq "/usr/bin/bash" ]; then
    shell_config="$HOME/.bashrc"
  fi
}

get_variables() {
  local username_ok=0
  # Create Username
  if [ -z "$username" ]; then
    printf "Creating New User \n"
    read -p "Username: " username
  else
    # Basic Setup for most users
    printf "Creating User $username...\n"
  fi

  while :
  do

    if [ -f "$GIT_PROFILE_DIR/$username" ]; then
      echo "Username already exists. Pick another"
      # Username can be passed from commandline
      read -p "Username: " username
    else
      break
    fi
  done

  read -p "Enter Name (user.name): " name

  if [ -z "$email" ]; then
    read -p "Email (user.email): " email
  fi
}

setup(){
  echo "setting up user profile..."
  mkdir -p "$GIT_PROFILE_DIR"
  export GIT_CONFIG="$GIT_PROFILE_DIR/$username"
  git config user.name "$name"
  git config user.email "$email"
  export_prefix="export GIT_CONFIG"

  #TODO store current config and restore if installation fails

  if grep -Fq "$export_prefix" $shell_config
  then
    sed -i "s|.*export GIT_CONFIG.*|$export_prefix=$GIT_PROFILE_DIR/$username|" "$shell_config"
  else
    echo "Git Runas config"
    echo "$export_prefix=$GIT_PROFILE_DIR/$username" >> $shell_config
  fi
  printf "Setup complete\nRunning as $username"
}

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -u|--user)
    username="$2"
    shift 
    shift
    ;;
    -e|--email)
    email="$2"
    shift 
    shift
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done

set -- "${POSITIONAL[@]}"

get_variables
setup
